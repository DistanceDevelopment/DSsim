library("dev_tools")
library("devtools")
library(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github("C:\Users\kiera\Documents\GitHub\DSsim")
devtools::install_github("C:/Users/kiera\Documents/GitHub/DSsim")
devtools::install_github("C:/Users/kiera/Documents/GitHub/DSsim")
devtools::install_github("C:/Users/kiera/Documents/GitHub/DSsim/DSsim")
devtools::install_github("LHMarshall/DSsim")
devtools::install_github("LHMarshall/DSsim/DSsim")
install.packages("sp")
devtools::install_github("LHMarshall/DSsim/DSsim")
install.packages("mrds")
devtools::install_github("LHMarshall/DSsim/DSsim")
install.packages("fields")
devtools::install_github("LHMarshall/DSsim/DSsim")
install.packages("markdown")
install.packages("knitr")
?calc.area
library(DSsim)
?calc.area
??calc.area
?lapply
library(splancs)
citation("splancs")
library(DSsim)
library(shapefiles)
set.seed(1234)
region.shapefile = read.shapefile("C:/Users/kiera/OneDrive/Documents/3. Programming/R/Kieran Studenship/Truncation simulations/Study_ar")
region <- make.region(region.name = "Survey Region", units = "m", shapefile = region.shapefile)
pop.density <- make.density(region = region, x.space = 1000, y.space = 1000, constant = 1)
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 1500, fixed.N = TRUE)
pop<-generate.population(pop.description)
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 1500, fixed.N = TRUE)
pop<-generate.population(region, pop.description)
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 1500, fixed.N = TRUE)
pop<-generate.population(pop.description, region)
?generate.population
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 1500, fixed.N = TRUE)
pop<-generate.population(pop.description)
region.shapefile = read.shapefile("C:/Users/kiera/OneDrive/Documents/3. Programming/R/Kieran Studenship/Truncation simulations/Study_ar")
region <- make.region(region.name = "region", units = "m", shapefile = region.shapefile)
pop.density <- make.density(region = region, x.space = 1000, y.space = 1000, constant = 1)
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 1500, fixed.N = TRUE)
pop<-generate.population(pop.description)
sigma = 100
detect <- make.detectability(key.function = "hn", scale.param = sigma, truncation = 500)
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 1500, fixed.N = TRUE)
pop<-generate.population(pop.description)
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 1500, fixed.N = TRUE)
pop<-generate.population(pop.description, detect)
pop
plot(pop)
plot(region)
plot(pop)
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 1500, fixed.N = TRUE)
pop<-generate.population(pop.description)
plot(region)
plot(pop)
library(DSsim)
library(shapefiles)
set.seed(1234)
region.shapefile = read.shapefile("C:/Users/kiera/OneDrive/Documents/3. Programming/R/Kieran Studenship/Truncation simulations/Study_ar")
region <- make.region(region.name = "region", units = "m", shapefile = region.shapefile)
pop.density <- make.density(region = region, x.space = 1000, y.space = 1000, constant = 1)
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 1500, fixed.N = TRUE)
pop<-generate.population(pop.description)
plot(region)
plot(pop)
# Chunk 1
library(DSsim)
library(shapefiles)
set.seed(321)
# Chunk 2
getwd()
region.shapefile <- read.shapefile("Study_ar")
region <- make.region(region.name = "Survey Region", units = "m", shapefile = region.shapefile)
plot(region)
# Chunk 3
pop.density <- make.density(region = region, x.space = 1000, y.space = 1000, constant = 1)
plot(pop.density, plot.units = "km", style = "blocks")
plot(region, add = TRUE)
# Chunk 4
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 250, fixed.N = TRUE)
# Chunk 5
detect <- make.detectability(key.function = "hn", scale.param = 100, truncation = 500)
# Chunk 6
parallel.design <- make.design(transect.type = "Line",design.details = c("Parallel","Systematic"),region.obj = region, path = "shapefiles")
# Chunk 7
ddf.analyses <- make.ddf.analysis.list(dsmodel = list(~cds(key = "hn", formula = ~1), ~cds(key = "hr", formula = ~1)), method = "ds", criteria = "AIC", truncation = 125)
# Chunk 8
simtrunc125aichnhr <- make.simulation(reps = 999, single.transect.set = FALSE, region.obj = region, design.obj = parallel.design, population.description.obj = pop.description, detectability.obj = detect, ddf.analyses.list = ddf.analyses)
# Chunk 9
pop <- generate.population(simtrunc125aichnhr)
plot(region)
plot(pop)
# Chunk 10
transects <- generate.transects(simtrunc125aichnhr)
plot(region)
plot(transects, col = 4, lwd = 2)
# Chunk 11
eg.survey <- create.survey.results(simtrunc125aichnhr)
plot(eg.survey)
# Chunk 12
dist.data <- get.distance.data(eg.survey)
hist(dist.data$distance, xlab = "Distance (m)", main = "Distance Data")
# Chunk 13
simtrunc125  <- run(simtrunc125aichnhr, save.data = TRUE , data.path = "Data")
# Chunk 14
Trun.dists <- c(150, 175, 200, 250, 300)
sims <- c(simtrunc125)
for(Trun in Trun.dists){
ddf.analyses <- make.ddf.analysis.list(dsmodel = list(~cds(key = "hn", formula = ~1), ~cds(key = "hr", formula = ~1)), method = "ds", criteria = "AIC", truncation = Trun)
sim <- make.simulation(reps = 999, single.transect.set = FALSE, region.obj = region, design.obj = parallel.design, population.description.obj = pop.description, detectability.obj = detect, ddf.analyses.list = ddf.analyses)
sim  <- run(sim, load.data = TRUE, data.path = "Data")
sims <- c(sims, sim)
}
setwd("~/GitHub/DSsim/DSsim/vignettes")
sim  <- run(sim, load.data = TRUE, data.path = "Data")
# Chunk 1
library(DSsim)
library(shapefiles)
set.seed(321)
# Chunk 2
getwd()
region.shapefile <- read.shapefile("Study_ar")
region <- make.region(region.name = "Survey Region", units = "m", shapefile = region.shapefile)
plot(region)
# Chunk 3
pop.density <- make.density(region = region, x.space = 1000, y.space = 1000, constant = 1)
plot(pop.density, plot.units = "km", style = "blocks")
plot(region, add = TRUE)
# Chunk 4
pop.description <- make.population.description(region.obj = region, density.obj = pop.density, N = 250, fixed.N = TRUE)
# Chunk 5
detect <- make.detectability(key.function = "hn", scale.param = 100, truncation = 500)
# Chunk 6
parallel.design <- make.design(transect.type = "Line",design.details = c("Parallel","Systematic"),region.obj = region, path = "shapefiles")
# Chunk 7
ddf.analyses <- make.ddf.analysis.list(dsmodel = list(~cds(key = "hn", formula = ~1), ~cds(key = "hr", formula = ~1)), method = "ds", criteria = "AIC", truncation = 125)
# Chunk 8
simtrunc125aichnhr <- make.simulation(reps = 999, single.transect.set = FALSE, region.obj = region, design.obj = parallel.design, population.description.obj = pop.description, detectability.obj = detect, ddf.analyses.list = ddf.analyses)
# Chunk 9
pop <- generate.population(simtrunc125aichnhr)
plot(region)
plot(pop)
# Chunk 10
transects <- generate.transects(simtrunc125aichnhr)
plot(region)
plot(transects, col = 4, lwd = 2)
# Chunk 11
eg.survey <- create.survey.results(simtrunc125aichnhr)
plot(eg.survey)
# Chunk 12
dist.data <- get.distance.data(eg.survey)
hist(dist.data$distance, xlab = "Distance (m)", main = "Distance Data")
# Chunk 13
simtrunc125  <- run(simtrunc125aichnhr, save.data = TRUE , data.path = "Data")
